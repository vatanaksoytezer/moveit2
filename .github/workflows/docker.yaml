name: docker

on:
  schedule:
    # 5 PM UTC every Sunday
    - cron:  '0 17 * * 6'
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [rolling, galactic]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE: ghcr.io/vatanaksoytezer/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Containter Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          file: .docker/${{ github.job }}/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          push: true
          no_cache: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
          cache-from: type=registry,ref=${{ env.IMAGE }}
          cache-to: type=inline
          tags: ${{ env.IMAGE }}

  ci:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [rolling, galactic]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE: ghcr.io/vatanaksoytezer/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Containter Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          file: .docker/${{ github.job }}/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          push: true
          no_cache: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
          cache-from: type=registry,ref=${{ env.IMAGE }}
          cache-to: type=inline
          tags: ${{ env.IMAGE }}

  ci-testing:
    needs: ci
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [rolling, galactic]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE: ghcr.io/vatanaksoytezer/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Containter Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          file: .docker/${{ github.job }}/Dockerfile
          build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
          push: true
          no_cache: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
          cache-from: type=registry,ref=${{ env.IMAGE }}
          cache-to: type=inline
          tags: ${{ env.IMAGE }}


  # source:
  #   needs: ci-testing
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ROS_DISTRO: [rolling, galactic]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #     contents: read
  #   env:
  #     IMAGE: ghcr.io/vatanaksoytezer/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to Github Containter Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Build and Push
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: .docker/${{ github.job }}/Dockerfile
  #         build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
  #         push: true
  #         cache-from: type=registry,ref=${{ env.IMAGE }}
  #         cache-to: type=inline
  #         tags: ${{ env.IMAGE }}

  # delete_untagged:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - release
  #     - ci-testing
  #   permissions:
  #     packages: write
  #     contents: read
  #   steps:
  #     - name: Delete Untagged Images
  #       uses: actions/github-script@v3
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         script: |
  #           const response = await github.request("GET /${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions",
  #             { per_page: ${{ env.PER_PAGE }}
  #           });
  #           for(version of response.data) {
  #               if (version.metadata.container.tags.length == 0) {
  #                   console.log("delete " + version.id)
  #                   const deleteResponse = await github.request("DELETE /${{ env.OWNER }}/packages/container/${{ env.PACKAGE_NAME }}/versions/" + version.id, { });
  #                   console.log("status " + deleteResponse.status)
  #               }
  #           }
  #       env:
  #         OWNER: user
  #         PACKAGE_NAME: moveit2
  #         PER_PAGE: 1000
