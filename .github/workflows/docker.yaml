name: docker

on:
  schedule:
    # 5 PM UTC every Sunday
    - cron:  '0 17 * * 6'
  workflow_dispatch:
  push:
    branches:
      - main
      - fix/docker_cleanup

jobs:
  # release:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ROS_DISTRO: [rolling]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #     contents: read
  #   env:
  #     GH_IMAGE: ghcr.io/ros-planning/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}
  #     DH_IMAGE: moveit/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to Github Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build and Push
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: .docker/${{ github.job }}/Dockerfile
  #         build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
  #         push: true
  #         no-cache: true
  #         tags: |
  #           ${{ env.GH_IMAGE }}
  #           ${{ env.DH_IMAGE }}

  # ci:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ROS_DISTRO: [rolling]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #     contents: read
  #   env:
  #     GH_IMAGE: ghcr.io/ros-planning/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}
  #     DH_IMAGE: moveit/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to Github Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build and Push
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: .docker/${{ github.job }}/Dockerfile
  #         build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
  #         push: true
  #         no-cache: true
  #         tags: |
  #           ${{ env.GH_IMAGE }}
  #           ${{ env.DH_IMAGE }}

  # ci-testing:
  #   needs: ci
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ROS_DISTRO: [rolling]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #     contents: read
  #   env:
  #     GH_IMAGE: ghcr.io/ros-planning/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}
  #     DH_IMAGE: moveit/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to Github Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build and Push
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: .docker/${{ github.job }}/Dockerfile
  #         build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
  #         push: true
  #         no-cache: true
  #         tags: |
  #           ${{ env.GH_IMAGE }}
  #           ${{ env.DH_IMAGE }}

  # source:
  #   needs: ci-testing
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       ROS_DISTRO: [rolling]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     packages: write
  #     contents: read
  #   env:
  #     GH_IMAGE: ghcr.io/ros-planning/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}
  #     DH_IMAGE: moveit/moveit2:${{ matrix.ROS_DISTRO }}-${{ github.job }}

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to Github Container Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: "Remove .dockerignore"
  #       run: rm .dockerignore  # enforce full source context
  #     - name: Build and Push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         file: .docker/${{ github.job }}/Dockerfile
  #         build-args: ROS_DISTRO=${{ matrix.ROS_DISTRO }}
  #         push: true
  #         no-cache: true
  #         tags: |
  #           ${{ env.GH_IMAGE }}
  #           ${{ env.DH_IMAGE }}

  delete_untagged:
    runs-on: ubuntu-latest
    # needs:
    #   - release
    #   - source
    # steps:
    #   - name: Delete Untagged Images
    #     uses: actions/github-script@v3
    #     with:
    #       github-token: ${{ secrets.DELETE_PACKAGES_TOKEN }}
    #       script: |
    #         const response = await github.request("GET /${{ env.OWNER }}/${{ env.PACKAGE_NAME }}/pkgs/container/${{ env.PACKAGE_NAME }}/versions",
    #           { per_page: ${{ env.PER_PAGE }}
    #         });
    #         for(version of response.data) {
    #             if (version.metadata.container.tags.length == 0) {
    #                 console.log("delete " + version.id)
    #                 const deleteResponse = await github.request("DELETE /${{ env.OWNER }}/${{ env.PACKAGE_NAME }}/pkgs/container/${{ env.PACKAGE_NAME }}/versions/" + version.id, { });
    #                 console.log("status " + deleteResponse.status)
    #             }
    #         }
    #     env:
    #       OWNER: vatanaksoytezer
    #       PACKAGE_NAME: moveit2
    #       PER_PAGE: 1000
steps:
  - name: Prune
    uses: vlaurin/action-ghcr-prune@main
    with:
      token: ${{ secrets.DELETE_PACKAGES_TOKEN }}
      organization: vatanaksoytezer
      container: moveit2
      dry-run: true # Dry-run first, then change to `false`
      older-than: 7 # days
      keep-last: 0
      untagged: true
